react learn what matters
what - js library to maintain the front end efficiently
why - efficient and lightweight
how - create components, and make data if you need it, link the data and change data
whenever you want, react will react jab bhi data change hoga
when - jab aapko ek thoda bade level par app create karna ho, jismein khoob saari cheejein
ho rahi hai, and khoob saara reusable component structure hai


// browsers ka nature hota hai jab bhi page mein kuchh bhi change ho to poora DOM tree refresh karo, jiske wajah se
poora page re render hoga, jo ki kaafi inefficient hai, matlab ki socho agar ek change par DOM ek baar refresh ho raha
hai to 1lakh change 1lakh baar refresh hoga, browser crash ho jaayega/sakta hai

facebook ko ek problem najar aai ki real time mein wo notifications and reactions ko show nahi kar paa rahe hai, unhe
reactions, notifications and other data deliver karne mein page reload karna pad raha hai, and wo isliye kyoki they
were using something called php, ab is problem se niptane ke liye 2013 mein ek facebook ke engineer ne ek library
banaai ye library khaas thi, kyoki ye data ko real time mein dikha paa rahi thi, par is library ke kaam karne ka tareeka
different tha, ye main DOM tree ko update nahi krti hai directly, matlab ki agar page mein kuchh bhi change hug to
directly main DOM tree update nahi hoga, is library ka khud ka ek DOM tree hai uska naam hai virtual DOM h. ye DOM
tree exact copy hai real DOM tree ka, bas ek difference hai, wo hai ki jab bhi virtual DOM mein kuchh change hoga to
sirf use change kiya jaayega jo ki change hua hai naa ki poore tree ko refresh kiya jaayega.

react became so famous and useful for big applications.

react- very very very less page reloads
extreme use of reusable components
very very efficient


react coding mein saar code khud se nahi likhna padta hai, react waalo ne
aapko ek tool diya hai uska naam hai create-react-app

vite - react raw app bna saktey hai 

vite install karo
using :- npm create vite@latest
then react then javascipt then cd to project folder
then npm run dev
folder structure smjho:
node_module: vo file and folder h jo react app ko chaiye chalne ke liye 
public: images , svg ya static data
src me jsx hi components hotey hai 

hum code App.jsx me likhenge

gap components banaate ho aur ye saare components jaate hai ek parent
component par, aur parent component ko body mein put kar diya jaata hai

component ek function hai jo ki return karega jsx
jsx html ki trh dikhne vala syntax hai par uske pass powers hai jo html ke pass nhi hai 


HTML :- <h1>2+2</h1> output is 2+2

jsx :- <h1>{2+2}</h1> output is 4

<div className='main'>App               //sir ek hi element me chijey aayengi do se jada lement return nhi hoga 
    <h1>Hlo Ji</h1>
</div>

<>   
//react fragement boltey hai 
</>


//component me reaction of data
react will react when state changes 

const App = () => {
  var [a,b] = useState(56);
  return (
    <div className='w-full h-screen bg-zinc-900 text-white p-3'>
      <h1>{a}</h1>
      <button onClick={()=>b(a + 1) } className=' px-3 py-1 bg-green-500 rounded-md text-xs'>click</button>
    </div>
  )
}

isme a mera 56 hai b ek function hai jo state ko change karega  isme haar 
bar button pe click krne se 1 add hoga

react ka naam react isliye hai kyuki wo react karta hai jab bhi state change
hoti hai, aur yahi main model hai poore react ka, yahi uska heart hai aur yahi
uske kaam krne ka tareeka hai

//Component me data bejna and receive krna 

Product.jsx me :--
import React from 'react'

export const Product = ({namm}) => {
  return (
    <div className='text-white w-full h-60 bg-zinc-800 '>
      <h1>{namm}</h1>
    </div>
  )
}

App.jsx me :--
import React, { useState } from 'react'
import { Product } from './Product';
const App = () => {
  var [a,b] = useState(56);
  return (
    <div className='w-full h-screen bg-zinc-900 text-white p-3'>
      <Product namm="value"/>
    </div>
  )
}

export default App



ya fir  App.jsx me :----
import React, { useState } from 'react'
import { Product } from './Product';
const App = () => {
  var [a,b] = useState(56);
  return (
    <div className='w-full h-screen bg-zinc-900 text-white p-3'>
      <Product namm="value" data={{age: 19, name:"Jatin"}}/>
    </div>
  )
}
export default App

and Product.jsx me :----
import React from 'react'
export const Product = ({namm,data}) => {
  return (
    <div className='text-white w-full h-60 bg-zinc-800 '>
      <h1>{namm}</h1>
      <h2>{data.age}</h2>
    </div>
  )
}



// compnent me baney huye data ko update karna

Product.jsx me :----
import React, { useState } from 'react'
export const Product = ({namm,data}) => {
  const[a, b] = useState(true);
  return (
    <div className='text-white w-full h-60 bg-zinc-800 '>
      <h4 className={`${a === false ? "text-red-600": "text-blue-600"}`}>{a === false ? "hello":"hiii paaji"}</h4>
      <button onClick={()=>b(!a)}>change</button>
    </div>
  )
}

App.jsx me:----
import React, { useState } from 'react'
import { Product } from './Product';
const App = () => {
  var [a,b] = useState(56);
  return (
    <div className='w-full h-screen bg-zinc-900 text-white p-3'>
      <Product namm="value" data={{age: 19, name:"Jatin"}}/>
    </div>
  )
}
export default App

